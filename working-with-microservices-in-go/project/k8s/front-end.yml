apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers: 
      - name: front-end
        image: "arturbaccarin/front-end:1.0.1"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "120Mi"
            cpu: "500m"
        env:
          - name: BROKER_URL
            value: "http://broker-service.info"
        ports:
          - containerPort: 8081

---

apiVersion: v1
kind: Service
metadata:
  name: front-end
spec:
  selector:
    app: front-end
  ports:
    - protocol: TCP
      name: main-port
      port: 8081
      targetPort: 8081

# deploy:
# kubectl apply -f k8s
# kubectl get pods
# kubectl logs <pod_name>
# kubectl get deplyments
# kubectl get svc

# kubeclt expose deployment broker-service --type=LoadBalancer --port=8080 -target-port=8080
# kubectl apply -f k8s/front-end.yml

# minikube addoons enable ingress